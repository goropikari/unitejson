name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Set output binary name
        id: vars
        run: |
          binary_name="unitejson"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            echo "binary_name=${binary_name}.exe" >> $GITHUB_OUTPUT
          else
            echo "binary_name=${binary_name}" >> $GITHUB_OUTPUT
          fi

      - name: Build
        run: |
          go build -v -o ${{ steps.vars.outputs.binary_name }} .
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.vars.outputs.binary_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
